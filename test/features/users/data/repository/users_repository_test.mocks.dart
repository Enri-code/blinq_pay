// Mocks generated by Mockito 5.4.5 from annotations
// in blinq_pay/test/features/users/data/repository/users_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:blinq_pay/features/users/domain/datasource/users_datasource.dart'
    as _i2;
import 'package:blinq_pay/features/users/domain/models/user.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UsersDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersDatasource extends _i1.Mock implements _i2.UsersDatasource {
  MockUsersDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.User>> getUsers({
    int? page = 0,
    required _i2.UsersDatasourceParam? param,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
          {
            #page: page,
            #param: param,
          },
        ),
        returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i3.Future<List<_i4.User>>);
}

/// A class which mocks [UsersDatasourceParam].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsersDatasourceParam extends _i1.Mock
    implements _i2.UsersDatasourceParam {
  MockUsersDatasourceParam() {
    _i1.throwOnMissingStub(this);
  }
}
