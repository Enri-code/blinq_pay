// Mocks generated by Mockito 5.4.5 from annotations
// in blinq_pay/test/features/posts/presentation/bloc/posts_bloc/posts_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:blinq_pay/core/utils/data_helpers.dart' as _i6;
import 'package:blinq_pay/features/posts/data/repository/posts_repository.dart'
    as _i3;
import 'package:blinq_pay/features/posts/domain/datasource/posts_datasource.dart'
    as _i2;
import 'package:blinq_pay/features/posts/domain/models/post.dart' as _i7;
import 'package:either_dart/either.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePostsDatasource_0 extends _i1.SmartFake
    implements _i2.PostsDatasource {
  _FakePostsDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostsRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostsRepositoryImpl extends _i1.Mock
    implements _i3.PostsRepositoryImpl {
  MockPostsRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PostsDatasource get datasource => (super.noSuchMethod(
        Invocation.getter(#datasource),
        returnValue: _FakePostsDatasource_0(
          this,
          Invocation.getter(#datasource),
        ),
      ) as _i2.PostsDatasource);

  @override
  _i4.Future<_i5.Either<_i6.Failure, List<_i7.Post>>> getPosts({
    int? page = 0,
    required _i2.PostsDatasourceParam? param,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
          {
            #page: page,
            #param: param,
          },
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, List<_i7.Post>>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, List<_i7.Post>>>(
          this,
          Invocation.method(
            #getPosts,
            [],
            {
              #page: page,
              #param: param,
            },
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, List<_i7.Post>>>);
}
